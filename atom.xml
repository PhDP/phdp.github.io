<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>Philippe Desjardins-Proulx's blog</title>
    <link href="https://phdp.github.io//atom.xml" rel="self" />
    <link href="https://phdp.github.io/" />
    <id>https://phdp.github.io//atom.xml</id>
    <author>
        <name>Philippe Desjardins-Proulx</name>
        <email>philippe.desjardins.proulx@umontreal.ca</email>
    </author>
    <updated>2022-09-21T00:00:00Z</updated>
    <entry>
    <title>Gradual Types and the Bridge from Data Science to Maths</title>
    <link href="https://phdp.github.io//posts/2022-09-21-gradual.html" />
    <id>https://phdp.github.io//posts/2022-09-21-gradual.html</id>
    <published>2022-09-21T00:00:00Z</published>
    <updated>2022-09-21T00:00:00Z</updated>
    <summary type="html"><![CDATA[<h1>Gradual Types and the Bridge from Data Science to Maths</h1>

<a href="https://twitter.com/share" class="twitter-share-button" data-text="Gradual Types and the Bridge from Data Science to Maths" data-via="LambdaPhDP">Tweet</a>
<p id="dt"><script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script>
  2022-09-21
</p>

<p>Some are offended by the term “untyped”, but the language really is
untyped:</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode python"><code class="sourceCode python"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="kw">def</span> foo(x): <span class="cf">return</span> <span class="dv">0</span> <span class="cf">if</span> x <span class="op">&lt;</span> <span class="dv">0</span> <span class="cf">else</span> x</span></code></pre></div>
<p>At some point you’ll face reality and get an error, but the language itself
is untyped. It’s also a nasty function as you may be surprised to
get an integer even if x is a float.</p>
<pre>
>>> type(foo(6.0))
<class 'float'>
>>> type(foo(-6.0))
<class 'int'>
</pre>
<p>Julia has optional typing out-of-the-box, Python has mypy, and Clojure
has Typed Clojure. We’ll follow Typed Clojure and build a Clojure-like
Gradually-Typed Probabilistic Calculus of Constructions, but before, I’ll
explain. We’ll call it Manticore, or Manti for short.</p>
]]></summary>
</entry>
<entry>
    <title>Higher-Order Probability Theory</title>
    <link href="https://phdp.github.io//posts/2022-09-07-prob.html" />
    <id>https://phdp.github.io//posts/2022-09-07-prob.html</id>
    <published>2022-09-07T00:00:00Z</published>
    <updated>2022-09-07T00:00:00Z</updated>
    <summary type="html"><![CDATA[<h1>Higher-Order Probability Theory</h1>

<a href="https://twitter.com/share" class="twitter-share-button" data-text="Higher-Order Probability Theory" data-via="LambdaPhDP">Tweet</a>
<p id="dt"><script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script>
  2022-09-07
</p>

<p><span class="citation" data-cites="ned14"><sup>1</sup></span></p>
<h2 class="unnumbered" id="references">References</h2>
<div id="refs" class="references csl-bib-body" data-line-spacing="2" role="doc-bibliography">
<div id="ref-ned14" class="csl-entry" role="doc-biblioentry">
<div class="csl-left-margin">1. </div><div class="csl-right-inline">Nederpelt, R. &amp; Geuvers, H. <em>Type theory and formal proof: An introduction</em>. (Cambridge University Press, 2014).</div>
</div>
</div>
]]></summary>
</entry>

</feed>
